# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  vmImage: 'ubuntu-latest' # examples of other options: 'macOS-10.15', 'windows-2019'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: UseDotNet@2
  displayName: Setup .NET SDK v6.0.x
  inputs:
    packageType: sdk
    version: 6.0.x
    installationPath: $(Agent.ToolsDirectory)/dotnet

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: DotNetCoreCLI@2
  displayName: Check formatting
  inputs:
    command: custom
    custom: format
    projects: '$(solution)'
    arguments: '--verify-no-changes'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: build
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)' # Update this to match your need

- task: DotNetCoreCLI@2
  displayName: "Run Unit Tests"
  inputs:
    command: test
    projects: '**/*Tests*.csproj'
    arguments: '--filter "TestCategory!=Cosmos&TestCategory!=MsSql&TestCategory!=PostgreSql&TestCategory!=MySql" --configuration $(buildConfiguration) --collect "XPlat Code coverage"'


- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(Agent.TempDirectory)/**/*cobertura.xml'

# Publish pipeline artifacts
# Publish (upload) a file or directory as a named artifact for the current run
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.SourcesDirectory)/Hawaii-Cli/src/bin/Release/net6.0/' # Required 
    #artifactName: 'drop' # Optional
    #artifactType: 'pipeline' # Required. Options: pipeline, filepath. Default value: pipeline
    #fileSharePath: '\server\folderName' # Required when artifactType = filepath
    #parallel: false # Optional. Default value: false
    #parallelCount: 1 # Optional. Value must be at least 1 and not greater than 128. Default value: 8

# This task gets the current date and saves it to a variable so the docker task can use the build's
# date and time as a tag.
- task: PowerShell@2
  displayName: "Get date for Docker image Tag"
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "Setting up the date and time as a build variable for the Docker tag"
      $date=$(Get-Date -format yyyyMMdd-HHmmss)
      Write-Host "##vso[task.setvariable variable=BuildDate]$date"

# Build a docker image and push it to the container registry.
- task: Docker@2
  displayName: "Build and push docker image to Azure Container Registry"
  inputs:
    containerRegistry: 'CosmosDB GraphQL/Hawaii'
    repository: 'hawaii/$(Build.SourceBranch)'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile'
    tags: |
      $(BuildDate)-$(Build.SourceVersion)
      latest
