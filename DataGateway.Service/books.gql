type Query {
    getBooks(first: Int = 100): [Book!]!
    getBook(id: Int!): Book
    getReview(id: Int!, book_id: Int!): Review
    books(first: Int, after: String): BookConnection
}

type BookConnection {
    items: [Book]
    endCursor: String
    hasNextPage: Boolean
}

type Mutation {
    editBook(id: Int!, title: String, publisher_id: Int): Book
    insertBook(title: String!, publisher_id: Int!): Book
    addAuthorToBook(author_id: Int!, book_id: Int!): Boolean
}

type Publisher {
    id: Int
    name: String
    books(first: Int = 100): [Book!]!
    paginatedBooks(first: Int, after: String): BookConnection
}

type Book {
    id: Int
    title: String
    publisher_id: Int
    publisher: Publisher!
    reviews(first: Int = 100): [Review!]!
    authors(first: Int = 100): [Author!]!
}

type Author {
    id: Int
    name: String
    birthdate: String
    books(first: Int = 100): [Book!]!
}

type Review {
    id: Int
    content: String
    book: Book
}
