type Publisher @model {
    id: Int!
    name: String!
}

type Book @model {
    id: Int!
    title: String!
    publisher_id: Int!
    publisher: Publisher!
    website_placement: BookWebsitePlacement
    reviews(first: Int = 100, _filter: ReviewFilterInput, _filterOData: String): [Review!]!
    paginatedReviews(first: Int, after: String, _filter: ReviewFilterInput, _filterOData: String): ReviewConnection!
    authors(first: Int = 100, _filter: AuthorFilterInput, _filterOData: String): [Author!]!
    paginatedAuthors(first: Int, after: String, _filter: AuthorFilterInput, _filterOData: String): AuthorConnection!
}

type BookWebsitePlacement @model {
    id: Int!,
    book_id: Int!,
    price: Int!,
    book: Book!
}

type WebsiteUser {
    id: Int!,
    username: String
}

type Author @model {
    id: Int!
    name: String!
    birthdate: String!
}

type Review @model {
    id: Int!
    content: String!
    book: Book!
}

type Magazine {
    id: Int!
    title: String!
    issue_number: Int
}
