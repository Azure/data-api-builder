type Query {
    getBooks(first: Int = 100): [Book!]!
    getBook(id: Int!): Book
    getReview(id: Int!, book_id: Int!): Review
    getReviews: [Review!]!
    books(first: Int, after: String): BookConnection!
    reviews(first: Int, after: String): ReviewConnection!
}

type Mutation {
    editBook(id: Int!, title: String, publisher_id: Int): Book
    insertBook(title: String!, publisher_id: Int!): Book
    addAuthorToBook(author_id: Int!, book_id: Int!): Boolean
    deleteBook(id: Int!): Book
}

type Publisher {
    id: Int!
    name: String!
    books(first: Int = 100): [Book!]!
    paginatedBooks(first: Int, after: String): BookConnection!
}

type Book {
    id: Int!
    title: String!
    publisher_id: Int!
    publisher: Publisher!
    reviews(first: Int = 100): [Review!]!
    paginatedReviews(first: Int, after: String): ReviewConnection!
    authors(first: Int = 100): [Author!]!
    paginatedAuthors(first: Int, after: String): AuthorConnection!
}

type Author {
    id: Int!
    name: String!
    birthdate: String!
    books(first: Int = 100): [Book!]!
    paginatedBooks(first: Int, after: String): BookConnection!
}

type Review {
    id: Int!
    content: String!
    book: Book!
}

type BookConnection {
    items: [Book!]!
    endCursor: String
    hasNextPage: Boolean!
}

type ReviewConnection {
    items: [Review!]!
    endCursor: String
    hasNextPage: Boolean!
}

type AuthorConnection {
    items: [Author!]!
    endCursor: String
    hasNextPage: Boolean!
}
