init --config "dab-config.PostgreSql.json" --database-type postgresql --connection-string "Host=localhost;Database=datagatewaytest;username=REPLACEME;password=REPLACEME" --host-mode Development --cors-origin "http://localhost:5000"
add Publisher --config "dab-config.PostgreSql.json" --source publishers --permissions "anonymous:read"
add Stock --config "dab-config.PostgreSql.json" --source stocks --permissions "anonymous:create,read,update,delete"
add Book --config "dab-config.PostgreSql.json" --source books --permissions "anonymous:create,read,update,delete" --graphql "book:books"
add BookWebsitePlacement --config "dab-config.PostgreSql.json" --source book_website_placements --permissions "anonymous:read"
add Author --config "dab-config.PostgreSql.json" --source authors --permissions "anonymous:read"
add Review --config "dab-config.PostgreSql.json" --source reviews --permissions "anonymous:create,read,update" --rest false --graphql "review:reviews"
add Comic --config "dab-config.PostgreSql.json" --source comics --permissions "anonymous:create,read,update"
add Broker --config "dab-config.PostgreSql.json" --source brokers --permissions "anonymous:read"
add WebsiteUser --config "dab-config.PostgreSql.json" --source website_users --permissions "anonymous:create,read,delete,update"
add SupportedType --config "dab-config.PostgreSql.json" --source type_table --permissions "anonymous:create,read,delete,update"
add stocks_price --config "dab-config.PostgreSql.json" --source stocks_price --permissions "authenticated:create,read,update,delete"
update stocks_price --config "dab-config.PostgreSql.json" --permissions "anonymous:read"
update stocks_price --config "dab-config.PostgreSql.json" --permissions "TestNestedFilterFieldIsNull_ColumnForbidden:read" --fields.exclude "price"
update stocks_price --config "dab-config.PostgreSql.json" --permissions "TestNestedFilterFieldIsNull_EntityReadForbidden:create"
add Tree --config "dab-config.PostgreSql.json" --source trees --permissions "anonymous:create,read,update,delete"
add Shrub --config "dab-config.PostgreSql.json" --source trees --permissions "anonymous:create,read,update,delete" --rest plants
add Fungus --config "dab-config.PostgreSql.json" --source fungi --permissions "anonymous:create,read,update,delete" --graphql "fungus:fungi"
add User_NonAutogenRelationshipColumn --config "dab-config.PostgreSql.json" --source "users" --permissions "anonymous:*" --rest true --graphql true
add UserProfile --config "dab-config.PostgreSql.json" --source "user_profiles" --permissions "anonymous:*" --rest true --graphql true
add User_AutogenRelationshipColumn --config "dab-config.PostgreSql.json" --source "users" --permissions "anonymous:*" --rest true --graphql true
add User_AutogenToNonAutogenRelationshipColumn --config "dab-config.PostgreSql.json" --source "users" --permissions "anonymous:*" --rest true --graphql true
add books_view_all --config "dab-config.PostgreSql.json" --source books_view_all --source.type "view" --source.key-fields "id" --permissions "anonymous:*" --rest true --graphql true
add books_view_with_mapping --config "dab-config.PostgreSql.json" --source books_view_with_mapping --source.type "view" --source.key-fields "id" --permissions "anonymous:*" --rest true --graphql true
add stocks_view_selected --config "dab-config.PostgreSql.json" --source stocks_view_selected --source.type "view" --source.key-fields "categoryid,pieceid" --permissions "anonymous:*" --rest true --graphql true
add books_publishers_view_composite --config "dab-config.PostgreSql.json" --source books_publishers_view_composite --source.type "view" --source.key-fields "id,pub_id" --permissions "anonymous:*" --rest true --graphql true
add books_publishers_view_composite_insertable --config "dab-config.PostgreSql.json" --source books_publishers_view_composite_insertable --source.type "view" --source.key-fields "id" --permissions "anonymous:*" --rest true --graphql true
add Empty --config "dab-config.PostgreSql.json" --source "empty_table" --permissions "authenticated:create,read,update,delete" --rest true
add Notebook --config "dab-config.PostgreSql.json" --source "notebooks" --permissions "anonymous:read" --rest true --graphql true --fields.include "*" --policy-database "@item ne 1"
add Journal --config "dab-config.PostgreSql.json" --source "journals" --rest true --graphql true --permissions "policy_tester_noupdate:create,delete"
add ArtOfWar --config "dab-config.PostgreSql.json" --source "aow" --rest true --graphql false --permissions "anonymous:*"
add series --config "dab-config.PostgreSql.json" --source "series" --permissions "anonymous:*"
add Sales --config "dab-config.PostgreSql.json" --source "sales" --permissions "anonymous:*" --rest true --graphql true
add GQLmappings --config "dab-config.PostgreSql.json" --source "gqlmappings" --permissions "anonymous:*" --rest true --graphql true
add Bookmarks --config "dab-config.PostgreSql.json" --source "bookmarks" --permissions "anonymous:*" --rest true --graphql true
add MappedBookmarks --config "dab-config.PostgreSql.json" --source "mappedbookmarks" --permissions "anonymous:*" --rest true --graphql true
add BooksSold --config "dab-config.PostgreSql.json" --source "books_sold" --rest true --graphql "books_sold:books_sold" --permissions "anonymous:*"
add DefaultBuiltInFunction --config "dab-config.PostgreSql.json" --source "default_with_function_table" --rest true --graphql true --permissions "anonymous:*"
update GQLmappings --config "dab-config.PostgreSql.json" --map "__column1:column1,__column2:column2" --permissions "authenticated:*"
update Publisher --config "dab-config.PostgreSql.json" --permissions "authenticated:create,read,update,delete" --rest true --graphql true --relationship books --target.entity Book --cardinality many
update Publisher --config "dab-config.PostgreSql.json" --permissions "policy_tester_01:create,delete"
update Publisher --config "dab-config.PostgreSql.json" --permissions "policy_tester_01:update" --fields.include "*"
update Publisher --config "dab-config.PostgreSql.json" --permissions "policy_tester_01:read" --fields.include "*" --policy-database "@item.id eq 1940"
update Publisher --config "dab-config.PostgreSql.json" --permissions "policy_tester_02:create,delete"
update Publisher --config "dab-config.PostgreSql.json" --permissions "policy_tester_02:update" --fields.include "*"
update Publisher --config "dab-config.PostgreSql.json" --permissions "policy_tester_02:read" --fields.include "*" --policy-database "@item.id ne 1940"
update Publisher --config "dab-config.PostgreSql.json" --permissions "policy_tester_03:create,delete"
update Publisher --config "dab-config.PostgreSql.json" --permissions "policy_tester_03:update" --fields.include "*"
update Publisher --config "dab-config.PostgreSql.json" --permissions "policy_tester_03:read" --fields.include "*" --policy-database "@item.id ne 1940"
update Publisher --config "dab-config.PostgreSql.json" --permissions "policy_tester_04:create,delete"
update Publisher --config "dab-config.PostgreSql.json" --permissions "policy_tester_04:update" --fields.include "*"
update Publisher --config "dab-config.PostgreSql.json" --permissions "policy_tester_04:read" --fields.include "*" --policy-database "@item.id eq 1940"
update Publisher --config "dab-config.PostgreSql.json" --permissions "policy_tester_06:create,delete"
update Publisher --config "dab-config.PostgreSql.json" --permissions "policy_tester_06:update" --fields.include "*"
update Publisher --config "dab-config.PostgreSql.json" --permissions "policy_tester_06:read" --fields.include "*" --policy-database "@item.id eq 1940"
update Publisher --config "dab-config.PostgreSql.json" --permissions "database_policy_tester:read" --policy-database "@item.id ne 1234 or @item.id gt 1940"
update Publisher --config "dab-config.PostgreSql.json" --permissions "database_policy_tester:create"
update Publisher --config "dab-config.PostgreSql.json" --permissions "database_policy_tester:update" --policy-database "@item.id ne 1234"
update Stock --config "dab-config.PostgreSql.json" --permissions "authenticated:create,read,update,delete" --rest commodities --graphql true --relationship stocks_price --target.entity stocks_price --cardinality one
update Stock --config "dab-config.PostgreSql.json" --permissions "database_policy_tester:create,read"
update Stock --config "dab-config.PostgreSql.json" --permissions "database_policy_tester:update" --policy-database "@item.pieceid ne 1"
update Stock --config "dab-config.PostgreSql.json" --permissions "test_role_with_noread:create,update,delete"
update Stock --config "dab-config.PostgreSql.json" --permissions "test_role_with_excluded_fields:create,update,delete"
update Stock --config "dab-config.PostgreSql.json" --permissions "test_role_with_excluded_fields:read" --fields.exclude "categoryName"
update Stock --config "dab-config.PostgreSql.json" --permissions "test_role_with_policy_excluded_fields:create,update,delete"
update Stock --config "dab-config.PostgreSql.json" --permissions "test_role_with_policy_excluded_fields:read" --fields.exclude "categoryName" --policy-database "@item.piecesAvailable ne 0"
update Book --config "dab-config.PostgreSql.json" --permissions "authenticated:create,read,update,delete"
update Book --config "dab-config.PostgreSql.json" --relationship publishers --target.entity Publisher --cardinality one
update Book --config "dab-config.PostgreSql.json" --relationship websiteplacement --target.entity BookWebsitePlacement --cardinality one
update Book --config "dab-config.PostgreSql.json" --relationship reviews --target.entity Review --cardinality many
update Book --config "dab-config.PostgreSql.json" --relationship authors --target.entity Author --cardinality many --linking.object book_author_link --linking.source.fields "book_id" --linking.target.fields "author_id" --relationship.fields "id:id"
update Book --config "dab-config.PostgreSql.json" --map "id:id,title:title"
update Book --config "dab-config.PostgreSql.json" --permissions "policy_tester_01:create,delete"
update Book --config "dab-config.PostgreSql.json" --permissions "policy_tester_01:update" --fields.include "*"
update Book --config "dab-config.PostgreSql.json" --permissions "policy_tester_01:read" --fields.include "*" --policy-database "@item.title eq 'Policy-Test-01'"
update Book --config "dab-config.PostgreSql.json" --permissions "policy_tester_02:create,delete"
update Book --config "dab-config.PostgreSql.json" --permissions "policy_tester_02:update" --fields.include "*"
update Book --config "dab-config.PostgreSql.json" --permissions "policy_tester_02:read" --fields.include "*" --policy-database "@item.title ne 'Policy-Test-01'"
update Book --config "dab-config.PostgreSql.json" --permissions "policy_tester_03:create,delete"
update Book --config "dab-config.PostgreSql.json" --permissions "policy_tester_03:update" --fields.include "*"
update Book --config "dab-config.PostgreSql.json" --permissions "policy_tester_03:read" --fields.include "*" --policy-database "@item.title eq 'Policy-Test-01'"
update Book --config "dab-config.PostgreSql.json" --permissions "policy_tester_04:create,delete"
update Book --config "dab-config.PostgreSql.json" --permissions "policy_tester_04:update" --fields.include "*"
update Book --config "dab-config.PostgreSql.json" --permissions "policy_tester_04:read" --fields.include "*" --policy-database "@item.title ne 'Policy-Test-01'"
update Book --config "dab-config.PostgreSql.json" --permissions "policy_tester_05:create,delete"
update Book --config "dab-config.PostgreSql.json" --permissions "policy_tester_05:update" --fields.include "*"
update Book --config "dab-config.PostgreSql.json" --permissions "policy_tester_05:read" --fields.include "*" --policy-database "@item.id ne 9"
update Book --config "dab-config.PostgreSql.json" --permissions "policy_tester_06:update" --fields.include "*"
update Book --config "dab-config.PostgreSql.json" --permissions "policy_tester_06:create,delete"
update Book --config "dab-config.PostgreSql.json" --permissions "policy_tester_06:read" --fields.include "*" --policy-database "@item.id ne 10"
update Book --config "dab-config.PostgreSql.json" --permissions "policy_tester_07:create"
update Book --config "dab-config.PostgreSql.json" --permissions "policy_tester_07:update" --fields.include "*" --policy-database "@item.id ne 9"
update Book --config "dab-config.PostgreSql.json" --permissions "policy_tester_07:read" --fields.include "*"
update Book --config "dab-config.PostgreSql.json" --permissions "policy_tester_07:delete" --fields.include "*" --policy-database "@item.id ne 9"
update Book --config "dab-config.PostgreSql.json" --permissions "policy_tester_08:create"
update Book --config "dab-config.PostgreSql.json" --permissions "policy_tester_08:update" --fields.include "*" --policy-database "@item.id eq 9"
update Book --config "dab-config.PostgreSql.json" --permissions "policy_tester_08:delete" --fields.include "*" --policy-database "@item.id eq 9"
update Book --config "dab-config.PostgreSql.json" --permissions "policy_tester_08:read" --fields.include "*"
update Book --config "dab-config.PostgreSql.json" --permissions "test_role_with_noread:create,update,delete"
update Book --config "dab-config.PostgreSql.json" --permissions "test_role_with_excluded_fields:create,update,delete"
update Book --config "dab-config.PostgreSql.json" --permissions "test_role_with_excluded_fields:read" --fields.exclude "publisher_id"
update Book --config "dab-config.PostgreSql.json" --permissions "test_role_with_policy_excluded_fields:create,update,delete"
update Book --config "dab-config.PostgreSql.json" --permissions "test_role_with_policy_excluded_fields:read" --fields.exclude "publisher_id" --policy-database "@item.title ne 'Test'"
update Review --config "dab-config.PostgreSql.json" --permissions "authenticated:create,read,update,delete" --rest true --graphql review:reviews
update Review --config "dab-config.PostgreSql.json" --relationship books --target.entity Book --cardinality one
update Empty --config "dab-config.PostgreSql.json" --permissions "anonymous:read"
update BookWebsitePlacement --config "dab-config.PostgreSql.json" --permissions "authenticated:create,update" --rest true --graphql true
update BookWebsitePlacement --config "dab-config.PostgreSql.json" --permissions "authenticated:delete" --fields.include "*" --policy-database "@claims.userId eq @item.id"
update Author --config "dab-config.PostgreSql.json"  --permissions "authenticated:create,read,update,delete" --rest true --graphql true
update WebsiteUser --config "dab-config.PostgreSql.json" --permissions "authenticated:create,read,delete,update" --rest false --graphql "websiteUser:websiteUsers"
update Comic --config "dab-config.PostgreSql.json" --permissions "authenticated:create,read,update,delete" --rest true --graphql true --relationship myseries --target.entity series --cardinality one
update series --config "dab-config.PostgreSql.json" --relationship comics --target.entity Comic --cardinality many
update Broker --config "dab-config.PostgreSql.json" --permissions "authenticated:create,update,read,delete" --graphql false
update Tree --config "dab-config.PostgreSql.json" --rest true --graphql false --permissions "authenticated:create,read,update,delete" --map "species:Scientific Name,region:United State's Region"
update Shrub --config "dab-config.PostgreSql.json" --permissions "authenticated:create,read,update,delete" --map "species:fancyName" --relationship fungus --cardinality one --target.entity Fungus --relationship.fields "species:habitat"
update Fungus --config "dab-config.PostgreSql.json" --permissions "authenticated:create,read,update,delete" --map "spores:hazards" --rest true
update Fungus --config "dab-config.PostgreSql.json" --permissions "policy_tester_01:read" --fields.include "*" --policy-database "@item.region ne 'northeast'" --relationship Shrub --cardinality one --target.entity Shrub --relationship.fields "habitat:species"
update books_view_with_mapping --config "dab-config.PostgreSql.json" --map "id:book_id"
update BookWebsitePlacement --config "dab-config.PostgreSql.json" --relationship books --target.entity Book --cardinality one
update SupportedType --config "dab-config.PostgreSql.json" --map "id:typeid" --permissions "authenticated:create,read,delete,update" 
update Author --config "dab-config.PostgreSql.json" --relationship books --target.entity Book --cardinality many --linking.object book_author_link
update Notebook --config "dab-config.PostgreSql.json" --permissions "anonymous:create,update,delete"
update Journal --config "dab-config.PostgreSql.json" --permissions "policy_tester_noupdate:update" --fields.include "*" --policy-database "@item.id ne 1"
update Journal --config "dab-config.PostgreSql.json" --permissions "policy_tester_noupdate:read" --fields.include "*"
update Journal --config "dab-config.PostgreSql.json" --permissions "policy_tester_update_noread:create"
update Journal --config "dab-config.PostgreSql.json" --permissions "policy_tester_update_noread:update" --fields.include "*" --policy-database "@item.id eq 1"
update Journal --config "dab-config.PostgreSql.json" --permissions "policy_tester_update_noread:read" --fields.exclude "*"
update Journal --config "dab-config.PostgreSql.json" --permissions "policy_tester_update_noread:delete" --fields.include "*" --policy-database "@item.id eq 1"
update Journal --config "dab-config.PostgreSql.json" --permissions "authorizationHandlerTester:read"
update ArtOfWar --config "dab-config.PostgreSql.json" --permissions "authenticated:*" --map "DetailAssessmentAndPlanning:始計,WagingWar:作戰,StrategicAttack:謀攻,NoteNum:┬─┬ノ( º _ ºノ)"
update User_NonAutogenRelationshipColumn --config "dab-config.PostgreSql.json" --relationship UserProfile_NonAutogenRelationshipColumn --target.entity UserProfile --cardinality one --relationship.fields "username:username"
update User_AutogenRelationshipColumn --config "dab-config.PostgreSql.json" --relationship UserProfile_AutogenRelationshipColumn --target.entity UserProfile --cardinality one --relationship.fields "userid:profileid"
update User_AutogenToNonAutogenRelationshipColumn --config "dab-config.PostgreSql.json" --relationship UserProfile_AutogenToNonAutogenRelationshipColumn --target.entity UserProfile --cardinality one --relationship.fields "userid,username:userid,username"
update Sales --config "dab-config.PostgreSql.json" --permissions "authenticated:*"
update Bookmarks --config "dab-config.PostgreSql.json" --permissions "authenticated:*"
update MappedBookmarks --config "dab-config.PostgreSql.json" --permissions "authenticated:*" --map "id:bkid,bkname:name"
add PublisherNF --config "dab-config.PostgreSql.json" --source publishers --permissions "authenticated:create,read,update,delete" --rest true --graphql true
add BookNF --config "dab-config.PostgreSql.json" --source books --permissions "authenticated:create,read,update,delete" --rest true --graphql "bookNF:booksNF"
add AuthorNF --config "dab-config.PostgreSql.json" --source authors --permissions "authenticated:read" --rest true --graphql true
update PublisherNF --config "dab-config.PostgreSql.json" --permissions "authenticated:create,read,update,delete"  
update PublisherNF --config "dab-config.PostgreSql.json" --relationship books --target.entity BookNF --cardinality many
update PublisherNF --config "dab-config.PostgreSql.json" --permissions "TestNestedFilter_EntityReadForbidden:read"
update PublisherNF --config "dab-config.PostgreSql.json" --permissions "TestNestedFilter_ColumnForbidden:read"
update PublisherNF --config "dab-config.PostgreSql.json" --permissions "TestNestedFilterChained_EntityReadForbidden:create"
update PublisherNF --config "dab-config.PostgreSql.json" --permissions "TestNestedFilterChained_ColumnForbidden:read" --fields.exclude "name"
update AuthorNF --config "dab-config.PostgreSql.json"  --permissions "authenticated:create,read,update,delete" --rest true --graphql true
update AuthorNF --config "dab-config.PostgreSql.json" --relationship books --target.entity BookNF --cardinality many --linking.object book_author_link
update AuthorNF --config "dab-config.PostgreSql.json" --permissions "TestNestedFilter_EntityReadForbidden:create" --fields.exclude "name"
update AuthorNF --config "dab-config.PostgreSql.json" --permissions "TestNestedFilter_ColumnForbidden:read" --fields.exclude "name"
update AuthorNF --config "dab-config.PostgreSql.json" --permissions "TestNestedFilterChained_EntityReadForbidden:read"
update AuthorNF --config "dab-config.PostgreSql.json" --permissions "TestNestedFilterChained_ColumnForbidden:read"
update BookNF --config "dab-config.PostgreSql.json" --permissions "authenticated:create,read,update,delete"
update BookNF --config "dab-config.PostgreSql.json" --permissions "TestNestedFilter_EntityReadForbidden:read"
update BookNF --config "dab-config.PostgreSql.json" --permissions "TestNestedFilter_ColumnForbidden:read"
update BookNF --config "dab-config.PostgreSql.json" --permissions "TestNestedFilterChained_EntityReadForbidden:read"
update BookNF --config "dab-config.PostgreSql.json" --permissions "TestNestedFilterChained_ColumnForbidden:read"
update BookNF --config "dab-config.PostgreSql.json" --relationship publishers --target.entity PublisherNF --cardinality one
update BookNF --config "dab-config.PostgreSql.json" --relationship websiteplacement --target.entity BookWebsitePlacement --cardinality one
update BookNF --config "dab-config.PostgreSql.json" --relationship reviews --target.entity Review --cardinality many
update BookNF --config "dab-config.PostgreSql.json" --relationship authors --target.entity AuthorNF --cardinality many --linking.object book_author_link --linking.source.fields "book_id" --linking.target.fields "author_id" --relationship.fields "id:id"
update BookNF --config "dab-config.PostgreSql.json" --map "id:id,title:title"
update Comic --config "dab-config.PostgreSql.json" --permissions "TestNestedFilterManyOne_ColumnForbidden:read"
update Comic --config "dab-config.PostgreSql.json" --permissions "TestNestedFilterManyOne_EntityReadForbidden:read"
update Comic --config "dab-config.PostgreSql.json" --permissions "TestNestedFilterOneMany_ColumnForbidden:read" --fields.exclude "categoryName"
update Comic --config "dab-config.PostgreSql.json" --permissions "TestNestedFilterOneMany_EntityReadForbidden:create,update,delete"
update Stock --config "dab-config.PostgreSql.json" --permissions "TestNestedFilterFieldIsNull_ColumnForbidden:read"
update Stock --config "dab-config.PostgreSql.json" --permissions "TestNestedFilterFieldIsNull_EntityReadForbidden:read"
update series --config "dab-config.PostgreSql.json" --permissions "TestNestedFilterManyOne_ColumnForbidden:read" --fields.exclude "name"
update series --config "dab-config.PostgreSql.json" --permissions "TestNestedFilterManyOne_EntityReadForbidden:create,update,delete"
update series --config "dab-config.PostgreSql.json" --permissions "TestNestedFilterOneMany_ColumnForbidden:read"
update series --config "dab-config.PostgreSql.json" --permissions "TestNestedFilterOneMany_EntityReadForbidden:read"
update DefaultBuiltInFunction --config "dab-config.PostgreSql.json" --permissions "anonymous:create" --fields.exclude "current_date,next_date"
add dbo_DimAccount --config "dab-config.PostgreSql.json" --source "dimaccount" --permissions "anonymous:*" --rest true --graphql true
update dbo_DimAccount --config "dab-config.PostgreSql.json" --map "parentaccountkey:ParentAccountKey,accountkey:AccountKey" 
update dbo_DimAccount --config "dab-config.PostgreSql.json" --relationship parent_account --target.entity dbo_DimAccount --cardinality one --relationship.fields "parentaccountkey:accountkey"
update dbo_DimAccount --config "dab-config.PostgreSql.json" --relationship child_accounts --target.entity dbo_DimAccount --cardinality many --relationship.fields "accountkey:parentaccountkey"
