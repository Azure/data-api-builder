# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core
trigger:
- main
strategy:
  matrix:
    linux:
      imageName: "ubuntu-latest"
      ADDITIONAL_TEST_ARGS: '--collect "XPlat Code coverage"'
    mac:
      imageName: "macOS-latest"
      ADDITIONAL_TEST_ARGS: ''
    windows:
      imageName: "windows-latest"
      ADDITIONAL_TEST_ARGS: '--collect "XPlat Code coverage"'
  maxParallel: 3
pool:
  vmImage: $(imageName)
variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
steps:
- task: NuGetToolInstaller@1
- task: NuGetCommand@2
  displayName: Restore NuGet packages
  inputs:
    restoreSolution: '$(solution)'
- task: FileTransform@1
  displayName: 'Generate appsettings.Cosmos.json'
  inputs:
    folderPath: '$(System.DefaultWorkingDirectory)'
    fileType: 'json'
    targetFiles: 'DataGateway.Service/appsettings.Cosmos.json'
- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: build
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)' # Update this to match your need
- task: DotNetCoreCLI@2
  displayName: 'Run Cosmos DB Integration Tests'
  inputs:
    command: test
    arguments: '--filter "TestCategory=Cosmos" --configuration $(buildConfiguration) $(ADDITIONAL_TEST_ARGS)'
    projects: '**/*Tests/*.csproj'

# '/XPlat Code coverage --results-directory /home/vsts/work/1/s/TestResults/'
- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(Agent.TempDirectory)/**/*cobertura.xml'
