# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

strategy:
  matrix:
    linux:
      imageName: "ubuntu-latest"
    windows:
      imageName: "windows-latest"
  maxParallel: 2

pool:
  vmImage: $(imageName)

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  displayName: Restore NuGet packages
  inputs:
    restoreSolution: '$(solution)'

- task: FileTransform@1
  displayName: 'Generate appsettings.Test.json'
  inputs:
    folderPath: '$(System.DefaultWorkingDirectory)'
    fileType: 'json'
    targetFiles: 'DataGateway.Service/appsettings.Test.json'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: build
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)' # Update this to match your need

- task: DotNetCoreCLI@2
  displayName: 'Run Cosmos DB Integration Tests'
  inputs:
    command: test
    arguments: '--filter "TestCategory=Cosmos" --configuration $(buildConfiguration) "--logger:\"trx\"" --blame "--collect:\"XPlat Code coverage\"" --results-directory: $(Build.SourcesDirectory)/TestResults/'
    projects: '**/*Tests/*.csproj'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(Build.SourcesDirectory)/TestResults/**/*.xml'


jobs:
- job: mac
  pool:
    vmImage: 'macOS-latest' 
  variables:
    solution: '**/*.sln'
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Release'
  
  steps:
  - task: NuGetToolInstaller@1

  - task: NuGetCommand@2
    displayName: Restore NuGet packages
    inputs:
      restoreSolution: '$(solution)'

  - task: FileTransform@1
    displayName: 'Generate appsettings.Test.json'
    inputs:
      folderPath: '$(System.DefaultWorkingDirectory)'
      fileType: 'json'
      targetFiles: 'DataGateway.Service/appsettings.Test.json'

  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      command: build
      projects: '**/*.csproj'
      arguments: '--configuration $(buildConfiguration)' # Update this to match your need

  - task: DotNetCoreCLI@2
    displayName: 'Run Cosmos DB Integration Tests'
    inputs:
      command: test
      arguments: '--filter "TestCategory=Cosmos" --configuration $(buildConfiguration) "--logger:\"trx\"" --blame "--collect:\"XPlat Code coverage\"" --results-directory: $(Build.SourcesDirectory)/TestResults/'
      projects: '**/*Tests/*.csproj'

  - task: PublishCodeCoverageResults@1
    displayName: 'Publish code coverage'
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(Build.SourcesDirectory)/TestResults/**/*.xml'
