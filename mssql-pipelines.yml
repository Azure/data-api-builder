# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

jobs:
- job: LinuxTests
  pool:
    vmImage: 'ubuntu-latest'
  variables:
      solution: '**/*.sln'
      buildPlatform: 'Any CPU'
      buildConfiguration: 'Release'
      DataGatewayConfig.DatabaseConnection.ConnectionString: $(ConnectionStringSQLExpressVariable)

  steps:
  - task: NuGetToolInstaller@1

  - task: NuGetCommand@2
    inputs:
      restoreSolution: '$(solution)'

  - task: DockerInstaller@0
    displayName: Docker Installer
    inputs:
      dockerVersion: 17.09.0-ce
      releaseType: stable

# Linux
  - bash: |
      docker run -d -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=My!P@ssw0rd1" -p 1433:1433 --name customerdb mcr.microsoft.com/mssql/server:2019-latest
    condition: eq( variables['Agent.OS'], 'Linux' )
    displayName: Get and Start Ubuntu SQL Server Image Docker

# Windows
  - powershell: |
      docker run -d -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=My!P@ssw0rd1" -p 1433:1433 --name customerdb microsoft/mssql-server-windows-developer
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
    displayName: Get and Start Windows SQL Server Image Docker

  - task: FileTransform@1
    inputs:
      displayName: 'Generate appsettings.Test.json'
      folderPath: '$(System.DefaultWorkingDirectory)'
      fileType: 'json'
      targetFiles: 'DataGateway.Service/appsettings.Test.json'

  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      command: build
      projects: '**/*.csproj'
      arguments: '--configuration $(buildConfiguration)' # Update this to match your need

  - task: DotNetCoreCLI@2
    inputs:
      displayName: 'Run MsSql Integration Tests'
      command: test
      arguments: '--filter "TestCategory=MsSql" --configuration $(buildConfiguration)'
      projects: '**/*Tests/*.csproj'

- job: WindowsTests
  pool:
    vmImage: 'windows-latest'
  variables:
      solution: '**/*.sln'
      buildPlatform: 'Any CPU'
      buildConfiguration: 'Release'
      DataGatewayConfig.DatabaseConnection.ConnectionString: $(ConnectionStringLocalDBVariable)

  steps:
  - task: NuGetToolInstaller@1

  - task: NuGetCommand@2
    inputs:
      restoreSolution: '$(solution)'

  - task: PowerShell@2
    displayName: 'start mssqllocaldb'
    inputs:
      targetType: 'inline'
      script: |
      # sqllocaldb start mssqllocaldb\n\nsqllocaldb

  - task: FileTransform@1
    inputs:
      displayName: 'Generate appsettings.Test.json'
      folderPath: '$(System.DefaultWorkingDirectory)'
      fileType: 'json'
      targetFiles: 'DataGateway.Service/appsettings.Test.json'

  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      command: build
      projects: '**/*.csproj'
      arguments: '--configuration $(buildConfiguration)' # Update this to match your need

  - task: DotNetCoreCLI@2
    inputs:
      displayName: 'Run MsSql Integration Tests'
      command: test
      arguments: '--filter "TestCategory=MsSql" --configuration $(buildConfiguration)'
      projects: '**/*Tests/*.csproj'

