
trigger:
- main

jobs:
- job: linux
  pool:
    vmImage: 'ubuntu-latest'
  variables:
      solution: '**/*.sln'
      buildPlatform: 'Any CPU'
      buildConfiguration: 'Release'
      DataGatewayConfig.DatabaseConnection.ConnectionString: $(ConnectionStringPostgres)

  steps:
  - task: NuGetToolInstaller@1

  - task: NuGetCommand@2
    displayName: Restore NuGet packages
    inputs:
      restoreSolution: '$(solution)'

  - task: DockerInstaller@0
    displayName: Docker Installer
    inputs:
      dockerVersion: 17.09.0-ce
      releaseType: stable

  - bash: |
      docker run --name postgres-container -p 5432:5432 \
      -e POSTGRES_PASSWORD=$(PostgresPassword) \
      -e POSTGRES_DB=$(TestDatabaseName) \
      -d postgres
    condition: eq( variables['Agent.OS'], 'Linux' )
    displayName: Get and Start Ubuntu Postgres Image Docker

  - task: FileTransform@1
    displayName: 'Generate appsettings.PostgreSqlIntegrationTest.json'
    inputs:
      folderPath: '$(System.DefaultWorkingDirectory)'
      fileType: 'json'
      targetFiles: 'DataGateway.Service/appsettings.PostgreSqlIntegrationTest.json'

  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      command: build
      projects: '**/*.csproj'
      arguments: '--configuration $(buildConfiguration)' # Update this to match your need

  - task: DotNetCoreCLI@2
    displayName: 'Run Postgres Integration Tests'
    inputs:
      command: test
      arguments: '--filter "TestCategory=PostgreSql" --configuration $(buildConfiguration) --collect "XPlat Code coverage"'
      projects: '**/*Tests/*.csproj'

  - task: PublishCodeCoverageResults@1
    displayName: 'Publish code coverage'
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(Agent.TempDirectory)/**/*cobertura.xml'
