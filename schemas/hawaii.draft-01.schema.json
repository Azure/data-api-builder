{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "urn:hawaii:config:schema:draft-01",

    "title": "Hawaii",
    "description": "Schema for Hawaii engine",
    "type": "object",
    "properties": {
        "data-source": {
            "description": "Data source information",
            "type": "object",
            "properties": {
                "database-type": {
                    "description": "Database used in the backed",
                    "type": "string",
                    "enum": [
                        "mssql",
                        "postgres",
                        "mysql",
                        "mariadb",
                        "cosmosdb"
                    ]
                },
                "connection-string": {
                    "description": "Connection string for the selected database type",
                    "type": "string"
                }
            },
            "required": [
                "database-type",
                "connection-string"
            ]
        },
        "mssql": {            
            "type": "object",
            "description": "Azure SQL and SQL Server related settings",
            "properties": {
                "set-session-context": {
                    "type": "boolean",
                    "default": true,
                    "description": "Inject JWT claims into session context"                    
                }
            }
        },
        "runtime": {
            "type": "object",
            "description": "Runtime configuration settings",
            "properties": {
                "rest": {
                    "type": "object",
                    "description": "Global REST endpoint configuration",
                    "properties": {
                        "enabled": {
                            "default": true,
                            "type": "boolean"                            
                        },
                        "path": {
                            "default": "/api",
                            "type": "string"
                        }
                    }         
                },
                "graphql": {
                    "type": "object",
                    "description": "Global GraphQL endpoint configuration",
                    "properties": {
                        "enabled": {
                            "default": true,
                            "type": "boolean"                            
                        },
                        "path": {
                            "default": "/graphql",
                            "type": "string"
                        },
                        "allow-introspection": {
                            "type": "boolean"
                        }
                    }                    
                },
                "host": {
                    "type": "object",
                    "description": "Global hosting configuration",
                    "properties": {
                        "mode": {
                            "description": "Set if running in Development or Production mode",
                            "type": "string",
                            "enum": ["production", "development"]
                        },
                        "cors": {
                            "type": "object",
                            "description": "Configure CORS",
                            "properties": {
                                "origins": {
                                    "type": "array",
                                    "description": "Allowed origins",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "credentials": {
                                    "type": "boolean",
                                    "description": "Set value for Access-Control-Allow-Credentials header"
                                }                                
                            }
                        },
                        "authentication": {
                            "type": "object",
                            "properties": {
                                "jwt": {
                                    "type": "object",
                                    "properties": {
                                        "audience": { 
                                            "type": "string"
                                        },
                                        "authority": {
                                            "type": "string"
                                        },
                                        "issuer": {
                                            "type": "string"
                                        },
                                        "issuer-key": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }     
                }
            }
        },
        "entities": {
            "type": "object",
            "description": "Entities that will be exposed via REST and/or GraphQL",
            "patternProperties": {
                "^.*$": {
                    "type": "object",
                    "properties": {
                        "source": {
                            "type": "string",
                            "description": "The object in the backend database that is mapped to the entity"
                        },
                        "rest": {
                            "oneOf": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "object",                                    
                                    "properties": {
                                        "route": { "$ref": "#/$defs/singular-plural" }
                                    },
                                    "required": [ "route" ]
                                }
                            ]
                        },
                        "graphql": {
                            "oneOf": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "object",                                    
                                    "properties": {
                                        "type": { "$ref": "#/$defs/singular-plural" }
                                    },                                    
                                    "required": [ "type" ]
                                }
                            ]                            
                        },
                        "permissions": {
                            "type": "array",
                            "description": "Permissions assigned to this object",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "role": {
                                        "type": "string"
                                    },
                                    "actions": {
                                        "oneOf": [
                                            {
                                                "type": "string",
                                                "pattern": "[*]"
                                            },
                                            {
                                                "type": "array",
                                                "items": {
                                                    "oneOf": [
                                                        {
                                                            "$ref": "#/$defs/action"                                                
                                                        },
                                                        {
                                                            "type": "object",
                                                            "properties": {
                                                                "action": {
                                                                    "$ref": "#/$defs/action"   
                                                                },
                                                                "fields": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "include": {
                                                                            "type": "array",
                                                                            "items": { 
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "exclude": {
                                                                            "type": "array",
                                                                            "items": { 
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    }
                                                                },
                                                                "policy": {
                                                                    "type": "object",
                                                                    "description": "Define item-level security policy",
                                                                    "properties": {
                                                                        "request": {
                                                                            "type": "string"
                                                                        },
                                                                        "database": {
                                                                            "type": "string"
                                                                        }
                                                                    }
                                                                }   
                                                            }
                                                        }
                                                    ]                                            
                                                },
                                                "uniqueItems": true        
                                            }
                                        ]
                                    }                                                                     
                                }                                
                            },
                            "required": ["role", "actions"]
                        },
                        "relationships": {
                            "type": "object",
                            "patternProperties": {
                                "^.*$": {
                                    "properties": {
                                        "cardinality": {
                                            "type": "string",
                                            "enum": ["one", "many"]
                                        },
                                        "target.entity": {
                                            "type": "string"
                                        },
                                        "source.fields": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }                                            
                                        },
                                        "target.fields": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }                                            
                                        },
                                        "oneOf": {
                                            "linking.object": {
                                                "type":"string",
                                                "description": "The database object used for supporting the M:N relationship"
                                            },
                                            "linking.entity": {
                                                "type":"string",
                                                "description": "The entity used for supporting the M:N relationship"
                                            }
                                        },
                                        "linking.source.fields": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }     
                                        },
                                        "linking.target.fields": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }     
                                        }
                                    },
                                    "required": [ "target.entity" ]
                                }
                            }
                        },
                        "mappings": {
                            "type": "object",
                            "description": "Define mappings between database fields and GraphQL and REST fields",
                            "patternProperties": {
                                "^.*$": {
                                    "type": "string"
                                }
                            }
                        }
                    },                    
                    "required": ["source", "permissions"]
                }  
            }            
        }        
    },
    "required": [
        "data-source", "entities"
    ],

    "$defs": 
    {
        "singular-plural": {
            "oneOf": [
                {
                    "type": "string"
                },
                {
                    "type": "object",
                    "properties": {
                        "singular": {
                            "type": "string"
                        },
                        "plural": {
                            "type": "string"
                        }                                                        
                    }, 
                    "required": ["singular"]
                }
            ]
        },
        "action": {
            "oneOf": [
                {
                    "type": "string",
                    "enum": ["create", "read", "update", "delete"]
                },
                {
                    "type": "string",
                    "pattern": "[*]"
                }
            ]
        }
    }
}