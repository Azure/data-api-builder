<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net6.0</TargetFramework>
        <Configurations>Debug;Release;Docker</Configurations>
        <OutputPath>$(BaseOutputPath)\engine</OutputPath>
        <RuntimeIdentifiers>win-x64;linux-x64;osx-x64</RuntimeIdentifiers>
        <EmbedUntrackedSources>true</EmbedUntrackedSources>
    </PropertyGroup>

    <PropertyGroup Condition="'$(TF_BUILD)' == 'true'">
      <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
    </PropertyGroup>

    <ItemGroup>
        <None Remove="schema.gql" />
    </ItemGroup>

    <!--
    Set the CopyToOutputDirectory action based on the configuration.
    In Debug/Release, we'll copy the config, appsettings, sql and gql files, but not in Docker configuration since we don't want them to end up in the docker image.
  -->
    <PropertyGroup>
        <CopyToOutputDirectoryAction Condition="'$(Configuration)' == 'Debug'">Always</CopyToOutputDirectoryAction>
        <CopyToOutputDirectoryAction Condition="'$(Configuration)' == 'Release'">Always</CopyToOutputDirectoryAction>
        <CopyToOutputDirectoryAction Condition="'$(Configuration)'=='Docker'">Never</CopyToOutputDirectoryAction>
        <PackageLicenseFile>LICENSE.txt</PackageLicenseFile>
    </PropertyGroup>

    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Docker|AnyCPU'">
      <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
    </PropertyGroup>

    <ItemGroup>
        <Content Update="appsettings*.json">
            <CopyToOutputDirectory>$(CopyToOutputDirectoryAction)</CopyToOutputDirectory>
        </Content>
    </ItemGroup>


    <ItemGroup>
        <Watch Remove="dab-config.CosmosDb_NoSql.json" />
        <Watch Remove="dab-config.json" />
        <Watch Remove="dab-config.MsSql.json" />
        <Watch Remove="dab-config.MySql.json" />
        <Watch Remove="dab-config.PostgreSql.json" />
    </ItemGroup>


    <ItemGroup>
        <PackageReference Include="HotChocolate" />
        <PackageReference Include="HotChocolate.AspNetCore" />
        <PackageReference Include="HotChocolate.AspNetCore.Authorization" />
        <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" />
        <PackageReference Include="Microsoft.Azure.Cosmos" />
        <PackageReference Include="Microsoft.Data.SqlClient" />
        <PackageReference Include="Microsoft.Extensions.Configuration.Binder" />
        <PackageReference Include="Microsoft.Extensions.Configuration.Json" />
        <PackageReference Include="Microsoft.OData.Edm" />
        <PackageReference Include="Microsoft.OData.Core" />
        <PackageReference Include="Microsoft.OpenApi" />
        <PackageReference Include="MySqlConnector" />
        <PackageReference Include="Newtonsoft.Json" />
        <PackageReference Include="Npgsql" />
        <PackageReference Include="Polly" />
        <PackageReference Include="DotNetEnv" />
        <PackageReference Include="StyleCop.Analyzers">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Swashbuckle.AspNetCore.SwaggerUI" />
        <PackageReference Include="System.CommandLine" />
        <PackageReference Include="System.IO.Abstractions" />
        <PackageReference Include="Microsoft.SourceLink.GitHub" PrivateAssets="All" />
    </ItemGroup>
    <ItemGroup>
        <ProjectCapability Include="CSharp;Managed;ClassDesigner" />
    </ItemGroup>

  <ItemGroup>
    <None Include="..\..\nuget\README.md" CopyToOutputDirectory="PreserveNewest" />
    <None Include="..\..\LICENSE.txt" CopyToOutputDirectory="PreserveNewest" />
    <None Include="..\..\NOTICE.txt" Condition="Exists('..\..\NOTICE.txt')" CopyToOutputDirectory="PreserveNewest" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Core\Azure.DataApiBuilder.Core.csproj" />
  </ItemGroup>

</Project>
